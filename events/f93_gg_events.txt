namespace = f93_galaxy

system_event = {
	id = f93_galaxy.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = event_target:system_highway_start
		exists = event_target:system_highway_end
		event_target:system_highway_end = {
			is_same_value = ROOT
		}
	}

	immediate = {
		event_target:system_highway_start = {
			highway_create_system = yes
		}
		clear_global_event_target = system_highway_end
	}
}

country_event = {
	id = f93_galaxy.2
	mean_time_to_happen = { days = 1 }
	fire_only_once = yes
	hide_window = yes
	# title = f93_galaxy.2.name
	# desc = f93_galaxy.2.desc
	# picture = GFX_evt_alien_hieroglyphics

	trigger = {
		is_ai = no
	}
	immediate = {
		hidden_effect = {
			# set_galactic_union_spawner = yes
			# event_target:galactic_union_state_spawner = {
			# 	set_spawn_system_batch = begin
			# 	spawn_system = {
			# 		initializer = dd_highway_system_init_01
			# 		hyperlane = yes
			# 		min_distance = 40
			# 		max_distance = 45
			# 		direction = corewards
			# 	}
			# 	set_spawn_system_batch = end
			# 	event_target:system_highway_start = {
					
			# 		random_neighbor_system_euclidean = {
			# 			limit = {
			# 				NOT = { has_hyperlane_to = prev }
			# 				safe_highway_start_end = yes
			# 			}
			# 			add_hyperlane = {
			# 				from = this
			# 				to = prev
			# 			}
			# 		}
			# 		random_neighbor_system_euclidean = {
			# 			limit = {
			# 				NOT = { has_hyperlane_to = prev }
			# 				safe_highway_start_end = yes
			# 				distance = {
			# 					source = event_target:galactic_union_state_capitol
			# 					type = euclidean
			# 					min_distance > 50
			# 				}
			# 			}
			# 			add_hyperlane = {
			# 				from = this
			# 				to = prev
			# 			}
			# 		}
			# 		random_neighbor_system_euclidean = {
			# 			limit = {
			# 				NOT = { has_hyperlane_to = prev }
			# 				safe_highway_start_end = yes
			# 				distance = {
			# 					source = event_target:galactic_union_state_capitol
			# 					type = euclidean
			# 					min_distance > 70
			# 				}
			# 				distance_to_core_percent < 0.32
			# 			}
			# 			add_hyperlane = {
			# 				from = this
			# 				to = prev
			# 			}
			# 		}
			# 		random_neighbor_system_euclidean = {
			# 			limit = {
			# 				NOT = { has_hyperlane_to = prev }
			# 			}
			# 			add_hyperlane = {
			# 				from = this
			# 				to = prev
			# 			}
			# 		}
			# 	}
			# }
			# clear_global_event_target = galactic_union_state_spawner
				random_system = {
					limit = {
							exists = owner
							owner = { is_country_type = fallen_empire }
							is_capital_system = yes
						}
					highway_connect_relay_only = yes
					save_global_event_target_as = system_highway_start
				}
			
			while = {
				count = 10
				limit = {
					any_system = {
						exists = owner
						owner = { is_country_type = fallen_empire }
						is_capital_system = yes
						NOT = { has_megastructure = dandelion_relay }
					}
				}
				random_system = {
					limit = {
						exists = owner
						owner = { is_country_type = fallen_empire }
						is_capital_system = yes
						NOT = { has_megastructure = dandelion_relay }
					}
					save_global_event_target_as = system_highway_end
					event_target:system_highway_start = {
						highway_create_system = yes
					}
					clear_global_event_target = system_highway_end
				}
			}
			if = {
				limit = { any_system = { has_megastructure = ring_world_ruined NOT = { exists = owner } } }
				random_system = {
					limit = {
						has_megastructure = ring_world_ruined
						NOT = { exists = owner }
						NOT = { has_megastructure = dandelion_relay }
					}
					save_global_event_target_as = system_highway_end
					event_target:system_highway_start = {
						highway_create_system = yes
					}
					clear_global_event_target = system_highway_end
				}
			}
			if = {
				limit = {
					any_system = {
						exists = owner
						owner = { is_country_type = fallen_empire }
						is_capital_system = yes
						NOT = { has_megastructure = dandelion_relay }
					}
				}
				every_system = {
					limit = {
						exists = owner
						owner = { is_country_type = fallen_empire }
						is_capital_system = yes
						NOT = { has_megastructure = dandelion_relay }
					}
					save_global_event_target_as = system_highway_end
					closest_system = {
						limit = {
							NOT = { is_same_value = prev }
							has_megastructure = dandelion_relay
						}
						save_global_event_target_as = system_highway_start
						highway_create_system = yes
					}
					clear_global_event_target = system_highway_end
				}
			}
			
			set_galactic_union_spawner = yes
			event_target:galactic_union_state_spawner = {
				set_spawn_system_batch = begin
				spawn_system = {
					initializer = dd_highway_system_init_01
					hyperlane = no
					min_distance = 10
					max_distance = 15
				}
				set_spawn_system_batch = end
				event_target:system_highway_start = {
					while = {
						count = 4
						random_neighbor_system_euclidean = {
							limit = {
								NOT = { has_hyperlane_to = prev }
							}
							add_hyperlane = {
								from = this
								to = prev
							}
						}
					}
				}
			}

			event_target:galactic_union_state_capitol = {
				create_union_state = yes
				owner = {
					capital_star = {
						create_starbase = {
							owner = last_created_country
							size = starbase_citadel
							module = trading_hub
						}
					}
				}
			}
			event_target:galactic_union_state_spawner = {
				if = {
					limit = { has_owner = no }
					# set_name = Customs
					if = {
						limit = { any_system_planet = { is_colonizable = yes } }
						every_system_planet = {
							limit = { is_colonizable = yes }
							create_colony = {
								owner = last_created_country
								species = event_target:Galmeda_species
							}
							while = {
								count = 10
								create_pop = {
									species = event_target:Galmeda_species
									ethos = random
								}
							}
							add_district = district_city
							add_district = district_mining
							add_district = district_mining
						}
					}
					else_if = {
						limit = { NOT = { has_owner = yes } }
						random_system_planet = {
							limit = { 
								NOR = {
									is_planet_class = pc_gas_giant
									is_planet_class = star
									is_planet_class = pc_asteroid
								}
							}
							change_pc = rl_habitable_normal
							reroll_deposits = yes
							reroll_planet_modifiers = yes
							create_colony = {
								owner = last_created_country
								species = event_target:Galmeda_species
							}
							while = {
								count = 10
								create_pop = {
									species = event_target:Galmeda_species
									ethos = random
								}
							}
						}
					}
					create_starbase = {
						owner = last_created_country
						size = starbase_citadel
						module = trading_hub
					}
				}
			}
			clear_global_event_target = system_highway_start
			clear_global_event_target = galactic_union_state_spawner
		}
	}
}

country_event = {
	id = f93_galaxy.3
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_planet_within_border = {
			limit = { is_colonizable = yes }
			create_colony = {
				owner = last_created_country
				species = event_target:Galmeda_species
			}
			while = {
				count = 10
				create_pop = {
					species = event_target:Galmeda_species
					ethos = random
				}
			}
		}
		make_fallen_empire = yes
		capital_star = { create_fe_home_citadel = yes }
		every_system_within_border = {
			limit = { is_capital_system = no }
			create_fe_citadel = yes
		}
		every_planet_within_border = {
			limit = { is_capital = no }
			create_fe_fringe_colony = yes
			planet_event = { id = game_start.22 }
			planet_event = { id = game_start.23 }
			while = {
				count = 10
				create_pop = {
					species = event_target:Galmeda_species
					ethos = random
				}
			}
		}
		country_event = { id = game_start.10 }
	}
}
country_event = {
	id = f93_galaxy.4
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_system = {
			limit = {
				exists = owner
				owner = { is_country_type = fallen_empire }
				is_capital_system = yes
				NOT = { has_megastructure = dandelion_relay }
			}
			save_global_event_target_as = system_highway_end
			closest_system = {
				limit = {
					NOT = { is_same_value = prev }
					has_megastructure = dandelion_relay
				}
				save_global_event_target_as = system_highway_start
				highway_create_system = yes
			}
			clear_global_event_target = system_highway_end
			clear_global_event_target = system_highway_start
		}
	}
}
country_event = {
	id = f93_galaxy.5
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_owned_megastructure = {
			limit = { is_megastructure_type = dandelion_relay }
			remove_megastructure = this
		}
	}
}

country_event = {
	id = f93_galaxy.6
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_system = {
			limit = {
				NOT = {
					exists = owner
					any_system = {
						has_megastructure = dandelion_relay
						distance = {
							source = prev
							max_jumps = 10
							type = hyperlane
						}
					}
				}
			}
			set_name = disconnected
			every_system = {
				limit = { has_hyperlane_to = prev }
				remove_hyperlane = { from = this to = prev }
			}
		}
		every_country = {
			country_event = { id = game_start.33 }
		}
	}
}