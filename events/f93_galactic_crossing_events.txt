namespace = f93_galactic_crossing

system_event = {
	id = f93_galactic_crossing.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = event_target:system_highway_start
		exists = event_target:system_highway_end
		event_target:system_highway_end = {
			is_same_value = ROOT
		}
	}

	immediate = {
		event_target:system_highway_start = {
			highway_create_system = yes
		}
		clear_global_event_target = system_highway_end
	}
}

country_event = {
	id = f93_galactic_crossing.2
	mean_time_to_happen = { days = 1 }
	fire_only_once = yes
	hide_window = yes
	# title = f93_galactic_crossing.2.name
	# desc = f93_galactic_crossing.2.desc
	# picture = GFX_evt_alien_hieroglyphics

	trigger = {
		is_ai = no
	}
	immediate = {
		every_country = {
			country_event = { id = f93_galactic_crossing.8 days = 5 }
		}
		hidden_effect = {
			if = {
				limit = {
					NOT = {
						any_system = { has_megastructure = dandelion_relay }
					}
				}
				random_system = {
					limit = {
							exists = owner
							owner = { is_country_type = fallen_empire }
							is_capital_system = yes
						}
					highway_connect_relay_only = yes
					save_global_event_target_as = system_highway_start
				}
			}
			
			while = {
				count = 10
				limit = {
					any_system = {
						exists = owner
						owner = { is_country_type = fallen_empire }
						is_capital_system = yes
						NOT = { has_megastructure = dandelion_relay }
					}
				}
				random_system = {
					limit = {
						exists = owner
						owner = { is_country_type = fallen_empire }
						is_capital_system = yes
						NOT = { has_megastructure = dandelion_relay }
					}
					save_global_event_target_as = system_highway_end
					event_target:system_highway_start = {
						highway_create_system = yes
					}
					clear_global_event_target = system_highway_end
				}
			}
			if = {
				limit = { any_system = { has_megastructure = ring_world_ruined NOT = { exists = owner } } }
				random_system = {
					limit = {
						has_megastructure = ring_world_ruined
						NOT = { exists = owner }
						NOT = { has_megastructure = dandelion_relay }
					}
					save_global_event_target_as = system_highway_end
					event_target:system_highway_start = {
						highway_create_system = yes
					}
					clear_global_event_target = system_highway_end
				}
			}
			if = {
				limit = {
					any_system = {
						exists = owner
						owner = { is_country_type = fallen_empire }
						is_capital_system = yes
						NOT = { has_megastructure = dandelion_relay }
					}
				}
				every_system = {
					limit = {
						exists = owner
						owner = { is_country_type = fallen_empire }
						is_capital_system = yes
						NOT = { has_megastructure = dandelion_relay }
					}
					save_global_event_target_as = system_highway_end
					closest_system = {
						limit = {
							NOT = { is_same_value = prev }
							has_megastructure = dandelion_relay
						}
						save_global_event_target_as = system_highway_start
						highway_create_system = yes
					}
					clear_global_event_target = system_highway_end
				}
			}
			clear_global_event_target = system_highway_start
		}
		country_event = { id = f93_galactic_crossing.6 }
		country_event = { id = f93_galactic_crossing.7 days = 1 }
	}
}

#f93_galactic_crossing.3 is in an addon

country_event = {
	id = f93_galactic_crossing.4
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_system = {
			limit = {
				exists = owner
				owner = { is_country_type = fallen_empire }
				is_capital_system = yes
				NOT = { has_megastructure = dandelion_relay }
			}
			save_global_event_target_as = system_highway_end
			closest_system = {
				limit = {
					NOT = { is_same_value = prev }
					has_megastructure = dandelion_relay
				}
				save_global_event_target_as = system_highway_start
				highway_create_system = yes
			}
			clear_global_event_target = system_highway_end
			clear_global_event_target = system_highway_start
		}
	}
}
country_event = {
	id = f93_galactic_crossing.5
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_owned_megastructure = {
			limit = { is_megastructure_type = dandelion_relay }
			remove_megastructure = this
		}
	}
}

country_event = {
	id = f93_galactic_crossing.6
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_system = {
			limit = {
				NOR = {
					exists = owner
					has_star_flag = empire_cluster
					any_system = {
						has_megastructure = dandelion_relay
						distance = {
							source = prev
							max_jumps = @galactic_crossing_outskirts
							type = hyperlane
						}
					}
					has_star_flag = chosen_system
					has_star_flag = crisis_sapwn_exclude
					has_star_flag = lcluster
					has_star_flag = surveillance_supercomputer_system
				}
			}
			set_star_flag = f93_shroud_region_flag
			every_system = {
				limit = { has_hyperlane_to = prev }
				remove_hyperlane = { from = this to = prev }
			}
			system_event = { id = f93_shroud.1 }
		}
	}
}
country_event = {
	id = f93_galactic_crossing.7
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	immediate = {
		every_system = {
			limit = {
				has_megastructure = dandelion_relay
				NOR = {
					exists = owner
					has_star_flag = empire_cluster
					has_star_flag = unique_system
					any_fleet_in_system = { exists = this }
					any_system_megastructure = {
						NOT = { is_megastructure_type = dandelion_relay }
						exists = this
					}
				}
			}
			set_star_class = sc_no_star
			set_star_flag = f93_empty_system_on_galcrossing
			# set_name = BLANK_STRING
			every_system_planet = { remove_planet = yes }
			every_ambient_object = { destroy_ambient_object = this }
		}
		every_country = {
			limit = {
				controlled_systems > 0
				OR = {
					# num_pops > 0 
					is_country_type = dormant_marauders
					is_country_type = default
				}
				NOT = { is_country_type = primitive }
				NOT = {
					closest_system = {
						limit = { has_megastructure = dandelion_relay }
						max_steps = 20
					}
				}
			}
			random_system_within_border = {
				closest_system = {
					min_steps = 2
					random_system = {
						limit = { NOT = { exists = owner } has_megastructure = dandelion_relay has_natural_wormhole = no }
						prev = {
							spawn_natural_wormhole = {
								bypass_type = wormhole
								random_pos = yes
								orbit_angle = 360
							}
						}
						spawn_natural_wormhole = {
							bypass_type = wormhole
							random_pos = yes
							orbit_angle = 360
						}
						link_wormholes = prev
					}
				}
				owner = {
					country_event = { id = f93_galactic_crossing.11 }
				}
			}
		}
	}
}

country_event = {
	id = f93_galactic_crossing.8
	title = f93_galactic_crossing.8.name
	picture = GFX_evt_alien_hieroglyphics
	is_triggered_only = yes
	desc = {
		trigger = {
			owner = { is_shrouded_player = no }
		}
		text = f93_galactic_crossing.8.green
	}
	desc = {
		trigger = {
			owner = { capital_scope.solar_system = { any_neighbor_system_euclidean = { has_modifier = f93_shrouded_region_star } } }
		}
		text = f93_galactic_crossing.8.yellow
	}
	desc = {
		trigger = {
			owner = { is_shrouded_player = yes }
		}
		text = f93_galactic_crossing.8.red
	}
	trigger = {
		is_ai = no
	}
	
	option = {
		name = f93_galactic_crossing.8.a
	}
}

country_event = {
	id = f93_galactic_crossing.9
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = capital_scope
	}
	immediate = {
		every_system_within_border = {
			remove_star_flag = f93_crossing_capital_route_flag
		}

		capital_scope.solar_system = {
			if = {
				limit = {
					OR = {
						any_neighbor_system = { has_megastructure = dandelion_relay }
						any_neighbor_system = { has_megastructure = hyper_relay }
					}
				}
				set_star_flag = f93_crossing_capital_route_flag
				if = {
					limit = {
						any_system = { 
							has_megastructure = dandelion_relay
							is_system_connected_to_relay_network = yes
						}
					}
					remove_star_flag = f93_crossing_capital_route_flag
				}
			}
			else = {
				closest_system = {
					limit = {
						OR = {
							owner = { is_same_value = root }
							owner = { has_overlord = root }
						}
						
						OR = {
							any_neighbor_system = { has_megastructure = dandelion_relay }
							any_neighbor_system = { has_megastructure = hyper_relay }
						}
					}
					set_star_flag = f93_crossing_capital_route_flag
				}
			}
		}
		#Rename Ralis to Ralis as long as the AI holds it.
		if = {
			limit = {
				event_target:f93_ralis_planet = { owner = { is_ai = yes } }
			}
			event_target:f93_ralis_planet = {
				set_name = "Ralis"
				solar_system = { set_name = "Sactuary of Ralis" }
			}
		}
	}
}

country_event = {
	id = f93_galactic_crossing.10
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes

	immediate = {
		set_global_flag = f93_shroud_gate_active
		random_system = {
			limit = {
				is_star_class = sc_no_star
			}
			f93_place_shroud_gate_nexus = yes
		}
		random_system = {
			limit = {
				is_star_class = sc_no_star
				not = { has_star_flag = f93_raliscluster1 }
			}
			f93_place_shroud_gate_nexus = yes
		}
		event_target:f93_ralis_planet = {
			solar_system = {
				f93_place_shroud_gate_node = yes
			}
		}
		every_system = {
			limit = {
				any_system_planet = { is_homeworld = yes }
				NOT = { any_neighbor_system = { has_hyperlane_to = prev } }
			}
			random_neighbor_system_euclidean = {
				f93_place_shroud_gate_node = yes

			}
		}
		while = {
			count = 5
			random_system = {
				limit = {
					has_star_flag = f93_shroud_region_flag
					NOR = {
						has_star_flag = f93_ralisgate_cluster
						has_star_flag = f93_ralisgate
					}
				}
				f93_place_shroud_gate_node_and_cluster_level_2 = yes
			}
		}
	}
}

country_event = {
	id = f93_galactic_crossing.11
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		add_research_option = tech_wormhole_stabilization
		add_tech_progress = {
			tech = tech_wormhole_stabilization
			progress = 0.5
		}
		if = { #create a small event chain to obtain this tech early on.
			limit = { is_ai = no }
			add_tech_progress = {
				tech = tech_wormhole_stabilization
				progress = 0.3
			}
		}
		if = {
			limit = { has_origin = origin_void_dwellers }
			closest_system = {
				min_steps = 1
				random_system_planet = {
					save_event_target_as = target_planet
				}
				if = {
					limit = {
						event_target:target_planet = {
							is_star = yes
						}
					}
					spawn_habitat_effect = {
						DISTANCE = 19.798
					}
				}
				else = {
					spawn_habitat_effect = {
						DISTANCE = 9.899
					}
				}
				event_target:target_planet.solar_system = {
					set_star_flag = has_habitat
				}
			}
		}
		else_if = {
			limit = { closest_system = { min_steps = 2 exists = this } }
			closest_system = {
				limit = {
					NOR = {
						has_star_flag = neighbor_t1
						has_star_flag = neighbor_t2
						has_star_flag = neighbor_t1_first_colony
						has_star_flag = neighbor_t2_second_colony
					}
					any_system_planet = { is_planet_class = pc_barren }
				}
				min_steps = 2
				random_system_planet = {
					limit = { is_planet_class = pc_barren }
					change_pc = root.owner_species
					reroll_deposits = yes
				}
			}
		}
		else = {
			closest_system = {
				limit = {
					NOR = {
						has_star_flag = neighbor_t1_first_colony
						has_star_flag = neighbor_t2_second_colony
					}
					any_system_planet = { is_planet_class = pc_barren }
				}
				min_steps = 1
				random_system_planet = {
					limit = { is_planet_class = pc_barren }
					change_pc = root.owner_species
					reroll_deposits = yes
				}
			}
		}
	}
}