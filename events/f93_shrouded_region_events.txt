namespace = f93_shroud
#Finding the most isolated systems
system_event = {
	id = f93_shroud.1
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		NOR = {
			has_star_flag = chosen_system
			has_star_flag = crisis_sapwn_exclude
			has_star_flag = empire_cluster
		}
		has_star_flag = f93_shroud_region_flag
	}

	immediate = {
		set_star_flag = crisis_sapwn_exclude
		if = {
			limit = { is_inside_nebula = no }
			create_nebula = {
				name = Shrouded_Region_NAME
				radius = @f93_nebulae_radiuis
				effect = {
					add_modifier = { modifier = f93_shrouded_region_star multiplier = 0.5 }
					# random_list = {
					# 	20 = { create_nebula_1 = yes }
					# 	20 = { create_nebula_2 = yes }
					# 	20 = { create_nebula_3 = yes }
					# 	20 = { create_nebula_4 = yes }
					# 	10 = { create_rare_nebula_1 = yes }
					# 	10 = { create_rare_nebula_2 = yes }
					# 	4 = {
					# 		modifier = {
					# 			factor = 0
					# 			has_star_flag = empire_home_system
					# 		}
					# 		create_turbulent_nebula_1 = yes
					# 	}
					# 	4 = {
					# 		modifier = {
					# 			factor = 0
					# 			has_star_flag = empire_home_system
					# 		}
					# 		create_turbulent_nebula_2 = yes
					# 	}
					# }
				}
			}
			random_country = {
				limit = { is_ai = no }
				country_event = { id = f93_game_start.50 days = 5 }
			}
		}
		
		# set_name = "Shrouded"
		set_star_flag = f93_shroud_periphery_flag
		system_event = { id = f93_shroud.2 }
		system_event = { id = f93_shroud.2 days = 1 }
	}

}
system_event = {
	id = f93_shroud.2
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_star_flag = f93_shroud_core_flag }
		count_neighbor_system_euclidean = {
			count = all
			limit = { OR = { has_star_flag = f93_shroud_periphery_flag has_star_flag = f93_shroud_core_flag } }
		}
	}

	immediate = {
		# set_name = "core"
		remove_star_flag = f93_shroud_periphery_flag
		set_star_flag = f93_shroud_core_flag
		system_event = { id = f93_shroud.3 }
		system_event = { id = f93_shroud.3 days = 1 }
		system_event = { id = f93_shroud.4 days = 2 } 
		random_list = {
			1000 = {}
			100 = { if = { limit = { is_star_class = sc_black_hole } spawn_megastructure = { type = matter_decompressor_ruined } } }
			100 = { spawn_megastructure = { type = mega_shipyard_ruined } }
			100 = { spawn_megastructure = { type = dyson_sphere_ruined } }
			100 = { spawn_megastructure = { type = think_tank_ruined } }
			1 = { spawn_megastructure = { type = spy_orb_ruined } }
		}
	}

}
system_event = {
	id = f93_shroud.3
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_star_flag = f93_shroud_core_core_flag }
		count_neighbor_system_euclidean = {
			count = all
			limit = { OR = { has_star_flag = f93_shroud_core_core_flag has_star_flag = f93_shroud_core_flag } }
		}
	}

	immediate = {
		# set_name = "core core"
		remove_star_flag = f93_shroud_core_flag
		set_star_flag = f93_shroud_core_core_flag
		if = {
			limit = { distance_to_core_percent >= 0.8 }
			system_event = { id = f93_shroud.4 } 
		}
		else_if = {
			limit = { distance_to_core_percent >= 0.6 }
			system_event = { id = f93_shroud.4 days = 1 } 
		}
		else = {
			system_event = { id = f93_shroud.4 days = 2 } 
		}
	}

}

system_event = {
	id = f93_shroud.4
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes

	immediate = {
		# set_name = changed
		if = {
			limit = { num_planets_in_system = 0 }
			spawn_planet = {
				name = "Ralis"
				class = pc_city
				orbit_location = yes
				orbit_distance_offset = 32
				orbit_angle_offset = 291
				size = 28
			}
		}
		every_system_megastructure = {
			remove_megastructure = this
		}
		every_fleet_in_system = {
			destroy_fleet = this
		}
		spawn_megastructure = {
			type = crisis_sphere_ruined
			planet = star
		}
		while = {
			count = 3
			random_neighbor_system_euclidean = {
				limit = { NOT = { has_star_flag = star_cracked } }
				destroy_star_system = yes	
				every_system_megastructure = {
					remove_megastructure = this
				}
			}
		}
		random_system_planet = {
			limit = {
				NOR = {
					is_star = yes
					is_planet_class = pc_gas_giant
					is_planet_class = pc_asteroid
					is_planet_class = pc_ice_asteroid
				}
			}
			change_pc = pc_city
			set_name = "Ralis"
			set_planet_size = 28
			planet_event = { id = f93_shroud.6 days = 10}
		}
	}
}
country_event = {
	id = f93_shroud.5
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes

	immediate = {
		set_name = changed2
		random_system = {
			limit = { has_megastructure = dandelion_sphere_ruined }
			while = {
				count = 3
				random_neighbor_system_euclidean = {
					limit = { NOT = { has_star_flag = star_cracked } }
					destroy_star_system = yes
					every_system_megastructure = {
						remove_megastructure = this
					}
				}
			}
		}
	}
}
planet_event = {
	id = f93_shroud.6
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes

	immediate = {
		create_ralis_country = yes
		solar_system = {
			set_star_class = sc_black_hole
			star = {
				set_planet_size = 5
			}
			every_system = {
				limit = { has_star_flag = star_cracked has_star_flag = f93_shroud_region_flag }
				add_hyperlane = { from = this to = prev }
				every_system_planet = {
					random_list = {
						5 = { add_deposit = random }
						5 = { }
						1 = { add_deposit = random add_deposit = random }
					}
				}
			}
			random_system = {
				limit = { has_star_flag = star_cracked has_star_flag = f93_shroud_region_flag }
				spawn_megastructure = {
					type = matter_decompressor_1
					owner = last_created_country
					planet = star
					graphical_culture = root.owner
				}
				create_starbase = {
					owner = last_created_country
					size = starbase_starport
				}
				
			}
			every_system_planet = {
				limit = { is_colonizable = no is_star = no NOT = { is_planet_class = pc_city } }
				change_pc = pc_shrouded
				random_list = {
					5 = { add_deposit = random }
					5 = { }
					1 = { add_deposit = random add_deposit = random }
				}
			}
		}
	}
}
country_event = { #midgame trigger
	id = f93_shroud.7
	title = f93_shroud.7.name
	desc = f93_shroud.7.desc
	picture = GFX_evt_fallen_empire

	is_triggered_only = yes
	fire_only_once = yes
	trigger = {
		is_ai = no
	}
	option = {
		name = f93_shroud.7.a
		hidden_effect = {
			event_target:f93_ralis_country = {
				country_event = { id = f93_shroud.8 }
			}
		}
		
	}
}
country_event = {
	id = f93_shroud.8
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	trigger = {
		has_country_flag = ralis_country_flag
	}
	immediate = {
		set_ai_personality = fanatic_purifiers
		add_resource = {
			sr_dark_matter = 1
			alloys = 2
			minerals = 0.5
			energy = 3
			food = 0.01
			consumer_goods = 0.25
			unity = 0.1
			mult = 30000
		}
	add_tradition = tr_supremacy_adopt
	add_tradition = tr_supremacy_fleet_logistical_corps
	add_tradition = tr_supremacy_master_shipwrights
	add_tradition = tr_supremacy_war_games
	add_tradition = tr_supremacy_overwhelming_force
	add_tradition = tr_supremacy_great_game
	add_tradition = tr_supremacy_finish
	give_technology = { tech = tech_wormhole_stabilization }
	give_technology = { tech = tech_ascension_theory }
	add_ascension_perk = ap_become_the_crisis #only works on 4.0 and up

	random_system_within_border = {
		limit = { has_megastructure = crisis_sphere_ruined }
		random_system_megastructure = {
			limit = { is_megastructure_type = crisis_sphere_ruined }
			remove_megastructure = this
		}
		spawn_megastructure = {
			type = crisis_sphere_0
		}
		random_system_megastructure = {
			limit = { is_megastructure_type = crisis_sphere_0 }
			set_megastructure_flag = crisis_sphere
		}
		star = {
			create_ambient_object = {
				type = "crisis_sphere_1"
				location = this
			}
			last_created_ambient_object = {
				set_ambient_object_flag = crisis_sphere_1_system_effect
				set_location = {
					target = prev
					distance = 0
					angle = random
				}
			}
		}
		
		random_system = {
			limit = { NOT = { exists = owner } has_megastructure = dandelion_relay }
			prev = {
				spawn_natural_wormhole = {
					bypass_type = wormhole
					random_pos = yes
					orbit_angle = 360
				}
			}
			spawn_natural_wormhole = {
				bypass_type = wormhole
				random_pos = yes
				orbit_angle = 360
			}
			link_wormholes = prev
		}
	}
	}
}