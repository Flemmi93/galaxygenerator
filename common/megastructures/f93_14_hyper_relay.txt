# # currently not used
# f93_hyper_relay_ai = {
# 	entity = "hyper_relay_entity"
# 	construction_entity = "hyper_relay_entity"
# 	portrait = "GFX_megastructure_hyper_relay_background"
# 	place_entity_on_planet_plane = no
# 	build_outside_gravity_well = yes
# 	show_galactic_map_icon = no
# 	show_in_outliner = no
# 	build_time = 360
# 	resources = {
# 		category = megastructures_hyper_relay
# 		cost = {
# 			trigger = {
# 				NOT = { has_country_flag = flash_forge_hyper_relay_activated }
# 			}
# 			alloys = 500
# 			rare_crystals = 100
# 			influence = 25
# 		}

# 		upkeep = {
# 			energy = 2
# 		}
# 	}

# 	construction_blocks_and_blocked_by = self_type
# 	build_megastructure_no_cost_localization_key = "FLASH_FORGE_MEGASTRUCTURE"
# 	custom_tooltip_requirements = "MEGASTRUCTURE_TOOLTIP_REQUIREMENTS_OUTSIDE_GRAVITY_WELL"

# 	dismantle_cost = {
# 		category = megastructures_hyper_relay
# 		cost = {
# 			energy = 500
# 		}
# 	}

# 	dismantle_time = 360

# 	dismantle_potential = {
# 		always = yes
# 	}

# 	dismantle_possible = {
# 		can_dismantle_megastructure = {
# 			TECH = tech_hyper_relays
# 		}
# 	}

# 	on_dismantle_complete = {
# 		from = {
# 			add_resource = {
# 				alloys = 400
# 				mult = modifier:megastructure_dismantle_refund_mult
# 			}
# 		}
# 	}

# 	potential = {
# 		has_technology = tech_hyper_relays
# 		# is_ai = yes
# 	}

# 	possible = {
# 		hidden_trigger = {
# 			exists = starbase
# 		}
# 		custom_tooltip = {
# 			fail_text = "requires_inside_border_or_subject"
# 			OR = {
# 				is_inside_border = from
# 				AND = {
# 					exists = owner
# 					owner = {
# 						is_subject = yes
# 						overlord = { is_same_value = from }
# 					}
# 				}
# 			}
# 		}
# 		custom_tooltip = {
# 			fail_text = "requires_surveyed_system" # or is in my subject's territory
# 			OR = {
# 				NOT = {
# 					any_system_planet = {
# 						is_surveyed = {
# 							who = prev.from
# 							status = no
# 						}
# 					}
# 				}
# 				AND = {
# 					exists = owner
# 					owner = {
# 						is_subject = yes
# 						overlord = { is_same_value = from }
# 					}
# 				}
# 			}
# 		}
# 		custom_tooltip = {
# 			fail_text = "requires_no_existing_hyper_relay"
# 			NOR = {
# 				has_megastructure = hyper_relay
# 				has_megastructure = f93_hyper_relay_ai
# 				has_megastructure = hyper_relay_ruined
# 				has_megastructure = hyper_relay_restored
# 			}
# 		}
# 		custom_tooltip = {
# 			fail_text = "requires_technology_hyper_relays"
# 			from = { has_technology = tech_hyper_relays }
# 		}
# 		custom_tooltip = {
# 			fail_text = "requires_hyperlane"
# 			count_neighbor_system = {
# 				count > 0
# 			}
# 		}
# 	}

# 	placement_rules = {			# those would be ignored since the hyper relay is being "free-placed" between the inner and outer radius of the system
# 	}

# 	# root = system
# 	# from = country
# 	ai_weight = {
# 		factor = 100

# 		modifier = {
# 			factor = 0
# 			not = { from = { has_country_flag = f93_empire_connects_to_ancient_relay_flag } }
# 		}
# 	}

# 	bypass_type = relay_bypass
# 	on_build_queued = {
# 		fromfrom = {
# 			fleet_event = { id = astral_planes.1010 }
# 		}
# 	}
# 	on_build_unqueued = {
# 		fromfrom = {
# 			fleet_event = { id = astral_planes.1015 }
# 		}
# 	}
# 	on_build_complete = {
# 		from = {
# 			country_event = { id = tutorial.2131 }
# 		}
# 		fromfrom.solar_system = {
# 			spawn_megastructure = {
# 				type = hyper_relay
# 				owner = from
# 				coords_from = fromfrom
# 				graphical_culture = fromfrom
# 			}
# 		}
# 		last_created_fleet = {
# 			fleet_event = { id = astral_planes.1020 }
# 		}
# 		remove_megastructure = fromfrom
# 	}
# }
